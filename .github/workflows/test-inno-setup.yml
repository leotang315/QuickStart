name: Test Inno Setup

on:
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.29.0'

jobs:
  basic:
    name: Basic Inno Setup Test
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Test simple Inno Setup script
      run: |
        echo "=== Creating Simple Test Script ==="
        
        # Create a simple test script
        $testScript = @'
        [Setup]
        AppName=Test Application
        AppVersion=1.0
        DefaultDirName={autopf}\TestApp
        OutputDir=.
        OutputBaseFilename=TestAppSetup
        
        [Files]
        ; No files for this test
        
        [Code]
        function InitializeSetup(): Boolean;
        begin
          MsgBox('This is a test installation script.', mbInformation, MB_OK);
          Result := False; // Don't actually install anything
        end;
        '@
        
        $scriptPath = "test-script.iss"
        $testScript | Out-File -FilePath $scriptPath -Encoding UTF8
        
        echo "✅ Created test script: $scriptPath"
      shell: powershell
      
    - name: Compile simple test script
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
      with:
        path: test-script.iss
        options: /Q
        
    - name: Verify test compilation
      run: |
        echo "=== Verifying Test Compilation ==="
        
        if (Test-Path "TestAppSetup.exe") {
          echo "✅ Setup file created: TestAppSetup.exe"
          echo "File size: $((Get-Item 'TestAppSetup.exe').Length) bytes"
        } else {
          echo "❌ Setup file not found"
          exit 1
        }
      shell: powershell
      
    - name: Prepare dummy build files
      run: |
        echo "=== Preparing Dummy Build Files ==="
        
        # Create dummy directories and files for testing
        $buildDir = "build\windows\x64\runner\Release"
        New-Item -ItemType Directory -Path $buildDir -Force | Out-Null
        
        # Create dummy executable
        "dummy content" | Out-File -FilePath "$buildDir\quick_start.exe" -Encoding UTF8
        
        # Create dummy DLL files
        $dllFiles = @(
          "flutter_windows.dll",
          "WinSparkle.dll",
          "auto_updater_windows_plugin.dll",
          "connectivity_plus_plugin.dll",
          "desktop_drop_plugin.dll",
          "hotkey_manager_windows_plugin.dll",
          "screen_retriever_plugin.dll",
          "url_launcher_windows_plugin.dll",
          "window_manager_plugin.dll"
        )
        
        foreach ($dll in $dllFiles) {
          "dummy content" | Out-File -FilePath "$buildDir\$dll" -Encoding UTF8
        }
        
        # Create dummy data directory
        New-Item -ItemType Directory -Path "$buildDir\data" -Force | Out-Null
        "dummy data" | Out-File -FilePath "$buildDir\data\test.txt" -Encoding UTF8
        
        echo "✅ Dummy build files created"
      shell: powershell
      
    - name: Test project Inno Setup script
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
      with:
        path: build_tools/scripts/installer.iss
        options: /Q
      continue-on-error: true
      
    - name: Check project compilation result
      run: |
        echo "=== Checking Project Compilation Result ==="
        
        # Check if installer was created
        $distDir = "dist"
        if (Test-Path $distDir) {
          echo "✅ Dist directory found"
          Get-ChildItem $distDir -Recurse | ForEach-Object {
            echo "  - $($_.Name) ($($_.Length) bytes)"
          }
        } else {
          echo "⚠️ No dist directory found (expected for syntax test)"
        }
      shell: powershell
      
  # advanced:
  #   name: Advanced Inno Setup Test
  #   runs-on: windows-latest
  #   needs: basic
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
      
  #   - name: Setup Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: ${{ env.FLUTTER_VERSION }}
        
  #   - name: Enable Windows desktop
  #     run: flutter config --enable-windows-desktop
      
  #   - name: Get dependencies
  #     run: flutter pub get
      
  #   - name: Build Flutter app
  #     run: |
  #       echo "=== Building Flutter App ==="
  #       flutter build windows --release
        
  #       # Verify build output
  #       $buildDir = "build\windows\x64\runner\Release"
  #       if (Test-Path $buildDir) {
  #         echo "✅ Build directory exists"
  #         echo "\n=== Build Output ==="
  #         Get-ChildItem $buildDir -Name
  #       } else {
  #         echo "❌ Build directory not found"
  #         exit 1
  #       }
  #     shell: powershell
      
  #   - name: Compile installer with real Flutter build
  #     uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
  #     with:
  #       path: build_tools/scripts/installer.iss
  #       options: /Q
  #     continue-on-error: true
        
  #   - name: Check build results
  #     run: |
  #       echo "=== Checking Build Results ==="
        
  #       # Look for generated installer
  #       $distDir = "dist"
  #       if (Test-Path $distDir) {
  #         echo "✅ Installer generated successfully"
  #         echo "\n=== Generated Files ==="
  #         Get-ChildItem $distDir -Recurse | ForEach-Object {
  #           echo "  - $($_.Name) ($($_.Length) bytes)"
  #         }
  #       } else {
  #         echo "⚠️ No installer generated (may be expected)"
  #       }
  #     shell: powershell
      
  # full:
  #   name: Full Inno Setup Test
  #   runs-on: windows-latest
  #   needs: [basic, advanced]
  #   if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
      
  #   - name: Setup Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: ${{ env.FLUTTER_VERSION }}
        
  #   - name: Enable Windows desktop
  #     run: flutter config --enable-windows-desktop
      
  #   - name: Get dependencies
  #     run: flutter pub get
      
  #   - name: Build Flutter app
  #     run: flutter build windows --release
      
  #   - name: Compile full installer
  #     uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
  #     with:
  #       path: build_tools/scripts/installer.iss
  #       options: /Q
      
  #   - name: Verify full build results
  #     run: |
  #       echo "=== Full Build and Package Test ==="
        
  #       # Check for generated installer
  #       $distDir = "dist"
  #       if (Test-Path $distDir) {
  #         echo "✅ Full build process completed successfully"
          
  #         # Show final results
  #         echo "\n=== Final Build Results ==="
  #         Get-ChildItem $distDir -Recurse | ForEach-Object {
  #           echo "$($_.FullName) - $($_.Length) bytes"
  #         }
  #       } else {
  #         echo "❌ Full build process failed - no dist directory found"
  #         exit 1
  #       }
  #     shell: powershell
      
  #   - name: Upload installer artifact
  #     if: success()
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: inno-setup-installer
  #       path: dist/
  #       retention-days: 7